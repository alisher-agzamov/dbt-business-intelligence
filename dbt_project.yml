# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "dbt_business_intelligence_new"
version: "1.9.0"
config-version: 2
require-dbt-version: ">=1.9.0"
# Link your local project to a dbt project
dbt-cloud:
    project-id: 429650
# This setting configures which "profile" dbt uses for this project.
profile: "dbt_business_intelligence_new"
# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"
vars:
  company_name: "Bigstore Enterprises"
  company_start_date: "2019-01-01"
  
# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  dbt_business_intelligence_new:
    # Config indicated by + and applies to all files under models/example/
    +materialized: table
    +access: public
    staging:
      +schema: staging
      +materialized: view
      stg_customer:
        +tags:
          - "contains_pii"

seeds:
  dbt_business_intelligence:
    schema: staging # all seeds in this project will use the mapping schema by default
dispatch:
  - macro_namespace: dbt_utils
    search_order: ["tsql_utils", "dbt_utils"]
  - macro_namespace: dbt_date
    search_order: ["tsql_utils", "dbt_date"]
flags:
  use_materialization_v2: True